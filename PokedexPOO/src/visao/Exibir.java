/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package visao;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pokemon;
import persistencia.Conexão;
import persistencia.JDBCPokemon;

/**
 *
 * @author Marquinhos e Dandan
 */
public class Exibir extends javax.swing.JInternalFrame {

    /**
     * Creates new form Exibir
     */
    public Exibir() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        tipoSelect = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pokeNome = new javax.swing.JTextField();

        setClosable(true);

        jButton1.setText("Listar Todos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Tipo 1", "Tipo 2", "Total", "HP", "Ataque", "Defesa", "Ataque Especial", "Defesa Especial", "Velocidade", "Geração"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setResizable(false);
            tabela.getColumnModel().getColumn(1).setResizable(false);
            tabela.getColumnModel().getColumn(2).setResizable(false);
            tabela.getColumnModel().getColumn(3).setResizable(false);
            tabela.getColumnModel().getColumn(4).setResizable(false);
            tabela.getColumnModel().getColumn(5).setResizable(false);
            tabela.getColumnModel().getColumn(6).setResizable(false);
            tabela.getColumnModel().getColumn(7).setResizable(false);
            tabela.getColumnModel().getColumn(8).setResizable(false);
            tabela.getColumnModel().getColumn(9).setResizable(false);
            tabela.getColumnModel().getColumn(10).setResizable(false);
            tabela.getColumnModel().getColumn(11).setResizable(false);
        }

        tipoSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal", "Fire", "Water", "Grass", "Flying", "Fighting", "Poison", "Electric", "Ground", "Rock", "Psychic", "Ice", "Bug", "Ghost", "Steel", "Dragon", "Dark", "Fairy" }));
        tipoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoSelectActionPerformed(evt);
            }
        });

        jButton4.setText("Listar por Tipo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Buscar por nome");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        pokeNome.setText("Nome do Pokemon");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(120, 120, 120)
                        .addComponent(pokeNome, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(42, 42, 42)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(pokeNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tipoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Conexão fábrica = new Conexão ();
        JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
        ArrayList<Pokemon> pokemons = gerente.listarPokemon();
        fábrica.fecharConexão();
        //Adicionar Tabela
        DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
        modelo.setNumRows(0);

        for (Pokemon p: pokemons){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade(), p.getGeraçao()};
            modelo.addRow(dados);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void tipoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoSelectActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    String tipoS = tipoSelect.getSelectedItem().toString();  
    Conexão fábrica = new Conexão();
    JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
    ArrayList<Pokemon> pokemons = gerente.listarPokemonTipo(tipoS);
    fábrica.fecharConexão();
    // TODO add your handling code here:
    
     DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
     modelo.setNumRows(0);

        for (Pokemon p: pokemons){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade(), p.getGeraçao()};
            modelo.addRow(dados);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String texto = pokeNome.getText();
        Conexão fábrica = new Conexão();
        JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
        ArrayList<Pokemon> pokemons = gerente.listarPokemonNome(texto);
        fábrica.fecharConexão();
        
        DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
        modelo.setNumRows(0);

        for (Pokemon p: pokemons){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade(), p.getGeraçao()};
            modelo.addRow(dados);

        }
        pokeNome.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:
        
       int linha = tabela.getSelectedRow();
       Object id = tabela.getValueAt(linha, 0);
       
       DetalhesPokemon detalhes = new DetalhesPokemon();
       Principal.desktop.add(detalhes);
       detalhes.setLocation((Principal.desktop.getWidth()-detalhes.getWidth())/2, (Principal.desktop.getHeight()-detalhes.getHeight())/2);
       
       detalhes.setVisible(true);
       
       
 
       
        
       Conexão fábrica = new Conexão();
       JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
       Pokemon pesquisa = gerente.listarPokemonId(id.toString());
       fábrica.fecharConexão();
       
       
       
       
       String nome = pesquisa.getNome();
       String tipo1 = pesquisa.getTipo1();
       String tipo2 = pesquisa.getTipo2();
       String total = Integer.toString(pesquisa.getTotal());
       String hp = Integer.toString(pesquisa.getHp());
       String ataque = Integer.toString(pesquisa.getAtaque());
       String defesa = Integer.toString(pesquisa.getDefesa());
       String SpAtk = Integer.toString(pesquisa.getSpAtk());
       String SpDef = Integer.toString(pesquisa.getSpDef());
       String speed = Integer.toString(pesquisa.getVelocidade());
       
       
       detalhes.loadDetalhes(id.toString(), nome, tipo1, tipo2, total, hp, ataque, defesa, SpAtk, SpDef, speed);
       detalhes.requestFocus();
           
       
       
       
       
       
       
       
       
       
       
        
        
        
        
    }//GEN-LAST:event_tabelaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pokeNome;
    private javax.swing.JTable tabela;
    private javax.swing.JComboBox<String> tipoSelect;
    // End of variables declaration//GEN-END:variables
}
