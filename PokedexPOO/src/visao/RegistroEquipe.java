/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package visao;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pokemon;
import modelo.RegistroTreinador;
import modelo.Treinador;
import persistencia.Conexão;
import persistencia.JDBCPokemon;
import persistencia.JDBCTreinador;

/**
 *
 * @author Marquinhos e Dandan
 */
public class RegistroEquipe extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroEquipe
     */
    public boolean processamento;
    public RegistroEquipe() {
        initComponents();
        
    }
    public void loadRegistros(String id, String nome, String idade, String cidade){
        campoId.setText(id);
        camponome.setText(nome);
        campoIdade.setText(idade+" anos");
        campocidade.setText(cidade);
        
        loadPokemons();
        loadPokemonsRegistrados();
        
    }
    public ArrayList<Pokemon> loadPokemons(){
        Conexão fábrica = new Conexão ();
        JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
        ArrayList<Pokemon> pokemons = gerente.listarPokemon();
        
        fábrica.fecharConexão();
        
        //Adicionar Tabela
        DefaultTableModel modelo = (DefaultTableModel)disponiveis.getModel();
        modelo.setNumRows(0);
        
        for (Pokemon p: pokemons){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade()};
            modelo.addRow(dados);

        }
        return pokemons;
    }
    
    public void loadPokemonsRegistrados(){
        Conexão fábrica = new Conexão ();
        JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
        
        RegistroTreinador registro = gerente.localizaTreinadorRegistrado(campoId.getText());
        
        
        
        //Adicionar Tabela
        DefaultTableModel modelo = (DefaultTableModel)registrados.getModel();
        modelo.setNumRows(0);
         
        RegistroTreinador equipe = gerente.localizaTreinadorRegistrado(campoId.getText());
        
        JDBCPokemon aux = new JDBCPokemon(fábrica.abrirConexão());
        ArrayList<Pokemon> pokeRegistro = new ArrayList<Pokemon>();
        
        Pokemon carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke1()));
        pokeRegistro.add(carrier);
        
        carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke2()));
        pokeRegistro.add(carrier);
        
        carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke3()));
        pokeRegistro.add(carrier);
        
        carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke4()));
        pokeRegistro.add(carrier);
        
        carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke5()));
        pokeRegistro.add(carrier);
        
        carrier = aux.listarPokemonRegistrado(String.valueOf(equipe.getId_poke6()));
        pokeRegistro.add(carrier);
        
        
        
        for (Pokemon p: pokeRegistro){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade()};
            modelo.addRow(dados);

        }
        fábrica.fecharConexão();
        pokeRegistro.clear();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campoId = new javax.swing.JTextField();
        campoIdade = new javax.swing.JTextField();
        campocidade = new javax.swing.JTextField();
        imagem = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        camponome = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        registrados = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        disponiveis = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        boxSlot = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        boxTipo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setResizable(true);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Nome:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Idade:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Cidade:");

        imagem.setMaximumSize(new java.awt.Dimension(250, 250));
        imagem.setMinimumSize(new java.awt.Dimension(250, 250));
        imagem.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("#ID:");

        registrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Tipo 1", "Tipo 2", "Total", "HP", "Ataque", "Defesa", "Ataque Especial", "Defesa Especial", "Velocidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        registrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registradosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(registrados);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Pokemons Registrados:");

        disponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Tipo 1", "Tipo 2", "Total", "HP", "Ataque", "Defesa", "Ataque Especial", "Defesa Especial", "Velocidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        disponiveis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disponiveisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(disponiveis);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("<<<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText(">>>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        boxSlot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "id_poke1", "id_poke2", "id_poke3", "id_poke4", "id_poke5", "id_poke6" }));
        boxSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxSlotActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Slot de Equipe");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Pokemons Disponíveis:");

        boxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Normal", "Fire", "Water", "Grass", "Flying", "Fighting", "Poison", "Electric", "Ground", "Rock", "Psychic", "Ice", "Bug", "Ghost", "Steel", "Dragon", "Dark", "Fairy" }));
        boxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxTipoActionPerformed(evt);
            }
        });

        jLabel9.setText("Filtro por Tipo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(265, 265, 265))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(boxSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(184, 184, 184)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(boxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(boxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)
                        .addGap(27, 27, 27))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campocidade, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoIdade, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(camponome, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jLabel1)
                    .addContainerGap(1298, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(campoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(camponome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(campoIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(campocidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jLabel1)
                    .addContainerGap(399, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public int click;
    private void registradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registradosMouseClicked
        click++;
        
        if(click==2){
        int linha = registrados.getSelectedRow();
        Object id = registrados.getValueAt(linha, 0);
        
        DetalhesPokemon detalhes = new DetalhesPokemon();
        Principal.desktop.add(detalhes);
        detalhes.setLocation((Principal.desktop.getWidth()-detalhes.getWidth())/2, (Principal.desktop.getHeight()-detalhes.getHeight())/2);

        detalhes.setVisible(true);

        Conexão fábrica = new Conexão();
        JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
        Pokemon pesquisa = gerente.listarPokemonId(id.toString());
        fábrica.fecharConexão();

        String nome = pesquisa.getNome();
        String tipo1 = pesquisa.getTipo1();
        String tipo2 = pesquisa.getTipo2();
        String total = Integer.toString(pesquisa.getTotal());
        String hp = Integer.toString(pesquisa.getHp());
        String ataque = Integer.toString(pesquisa.getAtaque());
        String defesa = Integer.toString(pesquisa.getDefesa());
        String SpAtk = Integer.toString(pesquisa.getSpAtk());
        String SpDef = Integer.toString(pesquisa.getSpDef());
        String speed = Integer.toString(pesquisa.getVelocidade());

        detalhes.loadDetalhes(id.toString(), nome, tipo1, tipo2, total, hp, ataque, defesa, SpAtk, SpDef, speed);
        detalhes.requestFocus();
        click=0;
        }

    }//GEN-LAST:event_registradosMouseClicked

    private void disponiveisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disponiveisMouseClicked
     click++;
        
        if(click==2){
        int linha = disponiveis.getSelectedRow();
        Object id = disponiveis.getValueAt(linha, 0);
        
        DetalhesPokemon detalhes = new DetalhesPokemon();
        Principal.desktop.add(detalhes);
        detalhes.setLocation((Principal.desktop.getWidth()-detalhes.getWidth())/2, (Principal.desktop.getHeight()-detalhes.getHeight())/2);

        detalhes.setVisible(true);

        Conexão fábrica = new Conexão();
        JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
        Pokemon pesquisa = gerente.listarPokemonId(id.toString());
        fábrica.fecharConexão();

        String nome = pesquisa.getNome();
        String tipo1 = pesquisa.getTipo1();
        String tipo2 = pesquisa.getTipo2();
        String total = Integer.toString(pesquisa.getTotal());
        String hp = Integer.toString(pesquisa.getHp());
        String ataque = Integer.toString(pesquisa.getAtaque());
        String defesa = Integer.toString(pesquisa.getDefesa());
        String SpAtk = Integer.toString(pesquisa.getSpAtk());
        String SpDef = Integer.toString(pesquisa.getSpDef());
        String speed = Integer.toString(pesquisa.getVelocidade());

        detalhes.loadDetalhes(id.toString(), nome, tipo1, tipo2, total, hp, ataque, defesa, SpAtk, SpDef, speed);
        detalhes.requestFocus();
        click=0;
        }
    }//GEN-LAST:event_disponiveisMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int linha = disponiveis.getSelectedRow();
        
        String slot = null,box;
        
        
        
        if(linha!=-1){
           
            Object id = disponiveis.getValueAt(linha, 0);
            box = boxSlot.getSelectedItem().toString();
            
           
            
            
            if(box.equals("-")!=true){               
                processamento=true;
                
                    if(processamento==true){
                    slot = boxSlot.getSelectedItem().toString();
                    Conexão fábrica = new Conexão();
                    JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
                    Treinador t = gerente.listarTreinadorId(campoId.getText());



                    gerente.registrarPokemon(t,slot, id.toString());

                    fábrica.fecharConexão();

                     DefaultTableModel modelo = (DefaultTableModel)registrados.getModel();


                     Pokemon p = new Pokemon();

                     JDBCPokemon aux = new JDBCPokemon(fábrica.abrirConexão());

                     p = aux.listarPokemonId(id.toString());
                     fábrica.fecharConexão();

                    Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade()};
                    {
                        modelo.addRow(dados);
                    }

                    loadPokemonsRegistrados();
                    JOptionPane.showMessageDialog(this, "Pokemon adicionado!");

                }
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Por favor, selecione um slot para o seu pokemon!");
            processamento=false;
            
        }
        }
        else{
            JOptionPane.showMessageDialog(this,"Por favor, selecione um Pokemon para adicionar!" );
            }
        
            
        
        
        
        
             
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int linha = registrados.getSelectedRow();
        
        
        if(linha!=-1){
            
            String box,slot = null;
            box = boxSlot.getSelectedItem().toString();
            Object id = registrados.getValueAt(linha, 0);
        
       
                
        
        
                    if(box.equals("-")!=true){
                        slot = "id_poke"+String.valueOf(linha+1);
                        

                    Conexão fábrica = new Conexão();
                    JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());

                    Treinador t = gerente.listarTreinadorId(campoId.getText());


                    //Função p/ remover pokemon
                    gerente.removerPokemon(t, slot);
                    loadPokemonsRegistrados();
                    fábrica.fecharConexão();


                     Pokemon p = new Pokemon();

                     JDBCPokemon aux = new JDBCPokemon(fábrica.abrirConexão());

                     p = aux.listarPokemonId(id.toString());
                     fábrica.fecharConexão();
                     JOptionPane.showMessageDialog(this, "Pokemon removido!");
                 }
                    else{
                        JOptionPane.showMessageDialog(this, "Por favor, selecione um slot para remover o Pokemon!");
                        
                    }
            }
            else{
            JOptionPane.showMessageDialog(this, "Por favor, selecione um Pokemon para remover!");
            processamento=false;

            }
        
          
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void boxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxTipoActionPerformed
    String tipoS = boxTipo.getSelectedItem().toString();  
    Conexão fábrica = new Conexão();
    JDBCPokemon gerente = new JDBCPokemon(fábrica.abrirConexão());
    ArrayList<Pokemon> pokemons = gerente.listarPokemonTipo(tipoS);
    fábrica.fecharConexão();
    // TODO add your handling code here:
    
     DefaultTableModel modelo = (DefaultTableModel)disponiveis.getModel();
     modelo.setNumRows(0);

        for (Pokemon p: pokemons){
            Object[] dados ={p.getId(), p.getNome(), p.getTipo1(), p.getTipo2(), p.getTotal(), p.getHp(), p.getAtaque(), p.getDefesa(), p.getSpAtk(), p.getSpDef(), p.getVelocidade(), p.getGeraçao()};
            modelo.addRow(dados);

        }
    }//GEN-LAST:event_boxTipoActionPerformed

    private void boxSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxSlotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxSlotActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxSlot;
    private javax.swing.JComboBox<String> boxTipo;
    private javax.swing.JTextField campoId;
    private javax.swing.JTextField campoIdade;
    private javax.swing.JTextField campocidade;
    private javax.swing.JTextField camponome;
    private javax.swing.JTable disponiveis;
    private javax.swing.JLabel imagem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable registrados;
    // End of variables declaration//GEN-END:variables
}
