/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package visao;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pokemon;
import modelo.RegistroTreinador;
import modelo.Treinador;
import persistencia.Conexão;
import persistencia.JDBCPokemon;
import persistencia.JDBCTreinador;

/**
 *
 * @author Marquinhos e Dandan
 */
public class ExibirTreinador extends javax.swing.JInternalFrame {

    /**
     * Creates new form ExibirTreinador
     */
    public ExibirTreinador() {
        initComponents();
    }
public boolean processamento;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        buscaNome = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        boxCidade = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Idade", "Cidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);
        if (tabela.getColumnModel().getColumnCount() > 0) {
            tabela.getColumnModel().getColumn(0).setResizable(false);
            tabela.getColumnModel().getColumn(1).setResizable(false);
            tabela.getColumnModel().getColumn(2).setResizable(false);
            tabela.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setText("Listar Todos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Pesquisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        boxCidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Viridian", "Pewter", "Cerulean", "Vermilion", "Celadon", "Saffron", "Fuschia", "Pallet Town", "Lavander Town" }));
        boxCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCidadeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("F iltrar por cidade:");

        jButton3.setText("Registrar Pokemons ao Treinador");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Remover Treinador");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(buscaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(54, 54, 54)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(buscaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(boxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_tabelaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Conexão fábrica = new Conexão ();
     
        JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
        ArrayList<Treinador> treinadores = gerente.listarTodosTreinador();
        fábrica.fecharConexão();
        //Adicionar Tabela
        DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
        modelo.setNumRows(0);

        for (Treinador t: treinadores){
            Object[] dados ={t.getId(), t.getNome(), t.getIdade(), t.getCidade()};
            modelo.addRow(dados);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String texto = buscaNome.getText();
        Conexão fábrica = new Conexão();
        JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
        ArrayList<Treinador> treinadores = gerente.listarTreinadorNome(texto);
        fábrica.fecharConexão();
        
        DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
        modelo.setNumRows(0);

        for (Treinador t: treinadores){
            Object[] dados ={t.getId(), t.getNome(), t.getIdade(), t.getCidade()};
            modelo.addRow(dados);

        }
        buscaNome.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void boxCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCidadeActionPerformed
    String tipoS = boxCidade.getSelectedItem().toString();  
    Conexão fábrica = new Conexão();
    JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
    ArrayList<Treinador> treinadores = gerente.listarTreinadorCidade(tipoS);
    fábrica.fecharConexão();
    // TODO add your handling code here:
    
     DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
     modelo.setNumRows(0);

        for (Treinador t: treinadores){
            Object[] dados ={t.getId(), t.getNome(), t.getIdade(), t.getCidade(),};
            modelo.addRow(dados);

        }
    }//GEN-LAST:event_boxCidadeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      
       
        
        int linha = tabela.getSelectedRow();
        
        
        if(linha == -1){
            JOptionPane.showMessageDialog(this, "Por favor, selecione um treinador para alterar a equipe");
            
            processamento=false;
        }
        else{
        processamento=true;
        
            if(processamento == true){
                RegistroEquipe novoRegistro = new RegistroEquipe();
                Principal.desktop.add(novoRegistro);
                novoRegistro.setVisible(true);

                novoRegistro.setLocation((Principal.desktop.getWidth()-novoRegistro.getWidth())/2, (Principal.desktop.getHeight()-novoRegistro.getHeight())/2);
                Object id = tabela.getValueAt(linha, 0);
                Conexão fábrica = new Conexão();

                JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
                Treinador registro = gerente.listarTreinadorId(id.toString());



                String Sid = String.valueOf(registro.getId());
                String nome = registro.getNome();
                String idade = String.valueOf(registro.getIdade());
                String cidade = registro.getCidade();


                novoRegistro.loadRegistros(Sid, nome, idade, cidade);
                novoRegistro.requestFocus();
                fábrica.fecharConexão();
                processamento=false;
            }
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int linha = tabela.getSelectedRow();
        int decisao = JOptionPane.showConfirmDialog(this, "Essa ação removerá o treinador, deseja continuar?", "Aviso!", 2);
        
        if (decisao==0){
        
        if(linha == -1){
            JOptionPane.showMessageDialog(this, "Por favor, selecione um treinador para remover");
            
            processamento=false;
        }
        else{
            processamento = true;
        
            if(processamento == true){
                               
                Object id = tabela.getValueAt(linha, 0);
                Conexão fábrica = new Conexão();

                JDBCTreinador gerente = new JDBCTreinador(fábrica.abrirConexão());
                
                Treinador remoçao = gerente.deletarTreinador(id.toString());
                
                
                ArrayList<Treinador> treinadores = gerente.listarTodosTreinador();
                
                
                DefaultTableModel modelo = (DefaultTableModel)tabela.getModel();
                modelo.setNumRows(0);

                for (Treinador t: treinadores){
                    Object[] dados ={t.getId(), t.getNome(), t.getIdade(), t.getCidade()};
                    modelo.addRow(dados);

                }
                
                fábrica.fecharConexão();
                

                processamento=false;
            }
       }
      }
      
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCidade;
    private javax.swing.JTextField buscaNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
